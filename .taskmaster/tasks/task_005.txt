# Task ID: 5
# Title: Create DrugTemplate Forms
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Implement forms for creating and editing drug templates with validation
# Details:
Create DrugTemplateForm using Django ModelForm with crispy forms styling. Include fields: name, presentation, usage_instructions, is_public. Add form validation for required fields, clean_name method to prevent duplicates by same user. Use MarkdownWidget for usage_instructions field. Apply Bootstrap 5.3.6 styling with medical theme.

# Test Strategy:
Test form validation rules, test form rendering with proper styling, verify markdown widget functionality, test duplicate name validation

# Subtasks:
## 1. Create a Django ModelForm [pending]
### Dependencies: None
### Description: Define a ModelForm class based on the existing Django model to handle form data input and validation automatically.
### Details:
Use Django's forms.ModelForm to create a form class linked to the model. This will simplify form creation by automatically generating fields corresponding to the model's fields.

## 2. Add Crispy Forms Styling to the ModelForm [pending]
### Dependencies: 5.1
### Description: Integrate django-crispy-forms to enhance the form's appearance and layout with customizable styling and layout helpers.
### Details:
Install and configure django-crispy-forms. In the ModelForm, add a FormHelper instance and define a Layout to control the rendering of form fields and buttons, improving UI consistency and responsiveness.

## 3. Implement Custom Validation Logic [pending]
### Dependencies: 5.1
### Description: Add custom validation to the ModelForm, such as checking for duplicate names or other business rules beyond default model validation.
### Details:
Override the clean() or clean_fieldname() methods in the ModelForm to perform checks like duplicate name detection. Raise ValidationError with appropriate messages if validation fails.

## 4. Integrate a Markdown Widget for Text Fields [pending]
### Dependencies: 5.1, 5.2
### Description: Enhance text input fields by integrating a Markdown editor widget to allow rich text formatting within the form.
### Details:
Replace the default textarea widget for relevant text fields with a Markdown widget (e.g., django-markdownx or similar). Ensure the widget is properly configured and styled within the crispy form layout.

