(self.webpackChunkeqmd=self.webpackChunkeqmd||[]).push([[934],{34:()=>{class e{constructor(){this.manager=null,this.errorHandler=null,this.performanceMonitor=null,this.initialized=!1,this.config={enabled:!0,autoInitialize:!1,debugMode:!1},this.callbacks={onInitialized:null,onCapabilitiesDetected:null,onCompressionStart:null,onCompressionProgress:null,onCompressionComplete:null,onCompressionError:null,onFallback:null}}async initialize(e={}){if(this.initialized)return this.getCapabilities();try{this.config={...this.config,...e},this.errorHandler=new CompressionErrorHandler,this.performanceMonitor=new CompressionPerformanceMonitor,this.manager=new VideoCompressionManager,this.setupManagerCallbacks();const i=await this.manager.initialize();return this.initialized=!0,this.callbacks.onInitialized&&this.callbacks.onInitialized(i),this.callbacks.onCapabilitiesDetected&&this.callbacks.onCapabilitiesDetected(i),this.config.debugMode&&console.log("Video compression initialized:",i),i}catch(e){throw console.error("Video compression initialization failed:",e),e}}isAvailable(){return this.initialized&&this.manager?.isAvailable()}getCapabilities(){return this.manager?.getCapabilities()||null}async compressVideo(e,i={}){if(!this.isAvailable())throw new Error("Video compression not available");const o=this._generateId();try{this.performanceMonitor.startCompressionTracking(o,i),this.callbacks.onCompressionStart&&this.callbacks.onCompressionStart({file:e,options:i,compressionId:o});const s=await this.manager.compressVideo(e,{...i,compressionId:o});return this.performanceMonitor.completeCompressionTracking(o,{originalSize:e.size,compressedSize:s.size,success:!0}),this.callbacks.onCompressionComplete&&this.callbacks.onCompressionComplete({original:e,compressed:s,compressionId:o}),s}catch(s){const r=await this.errorHandler.handleError(s,{file:e,options:i,compressionId:o});throw this.performanceMonitor.completeCompressionTracking(o,{originalSize:e.size,success:!1,error:s.message}),this.callbacks.onCompressionError&&this.callbacks.onCompressionError({error:s,errorResponse:r,file:e,compressionId:o}),r.fallback&&this.callbacks.onFallback&&this.callbacks.onFallback({reason:r.errorType,message:r.userMessage,recommendations:r.recommendations,originalFile:e,compressionId:o}),s}}cancelCompression(){this.manager&&this.manager.cancelCompression()}getAvailablePresets(){return this.manager?.getAvailablePresets()||[]}getRecommendedPreset(e,i=null){return this.manager?.getRecommendedPreset(e,i)||"mobile-optimized"}estimateCompression(e,i=null){return this.manager?.estimateCompression(e,i)||null}getRecommendations(){return this.performanceMonitor?.getPerformanceRecommendations()||[]}getStats(){return{manager:this.manager?.getStats()||null,performance:this.performanceMonitor?.getCompressionStats()||null,errors:this.errorHandler?.getErrorStats()||null,initialized:this.initialized,available:this.isAvailable()}}on(e,i){this.callbacks.hasOwnProperty(`on${e.charAt(0).toUpperCase()}${e.slice(1)}`)?this.callbacks[`on${e.charAt(0).toUpperCase()}${e.slice(1)}`]=i:console.warn(`Unknown event: ${e}`)}setupManagerCallbacks(){this.manager&&(this.manager.onProgress=e=>{e.compressionId&&this.performanceMonitor.updateCompressionStage(e.compressionId,e.stage,e.progress),this.callbacks.onCompressionProgress&&this.callbacks.onCompressionProgress(e)},this.manager.onComplete=e=>{},this.manager.onError=e=>{},this.manager.onFallback=e=>{this.callbacks.onFallback&&this.callbacks.onFallback(e)})}setEnabled(e){this.config.enabled=e}isEnabled(){return this.config.enabled}setDebugMode(e){this.config.debugMode=e}exportPerformanceData(){return this.performanceMonitor?.exportPerformanceData()||null}clearHistory(){this.performanceMonitor?.clearHistory(),this.errorHandler?.clearErrorHistory()}destroy(){this.manager&&this.manager.destroy(),this.performanceMonitor&&this.performanceMonitor.stopMonitoring(),this.manager=null,this.errorHandler=null,this.performanceMonitor=null,this.initialized=!1}_generateId(){return"vc_"+Date.now()+"_"+Math.random().toString(36).substr(2,8)}}window.videoCompression=new e,window.videoCompression.config.autoInitialize&&document.addEventListener("DOMContentLoaded",(()=>{window.videoCompression.initialize().catch(console.error)})),window.VideoCompression=e},539:()=>{let e=null,i=!1,o=null;const s={"medical-high":{crf:18,maxBitrate:"8M",bufsize:"16M",preset:"medium",profile:"high",level:"4.0",pixelFormat:"yuv420p",medicalSettings:{preserveMetadata:["creation_time","timecode"],colorSpace:"bt709",diagnosticSafe:!0,maxSizeReduction:.3}},"standard-medical":{crf:23,maxBitrate:"4M",bufsize:"8M",preset:"medium",profile:"main",level:"3.1",pixelFormat:"yuv420p",medicalSettings:{preserveMetadata:["creation_time"],colorSpace:"bt709",diagnosticSafe:!1,maxSizeReduction:.5}},"mobile-optimized":{crf:28,maxBitrate:"2M",bufsize:"4M",preset:"fast",profile:"baseline",level:"3.0",pixelFormat:"yuv420p",medicalSettings:{preserveMetadata:[],colorSpace:"bt709",diagnosticSafe:!1,maxSizeReduction:.7}}};self.onmessage=async function(r){const{type:d,data:g}=r.data;try{switch(d){case"init":await async function(){if(!i)try{e=await async function(){const e=t();if(!e.isFFmpegAvailable())throw new Error("FFmpeg.wasm not supported on this browser");try{return await e.loadFFmpeg()}catch(e){throw console.error("Failed to load FFmpeg:",e),new Error(`FFmpeg loading failed: ${e.message}`)}}(),setInterval((()=>{o||async function(){try{"function"==typeof gc&&gc()}catch(e){console.warn("Memory cleanup failed:",e)}}()}),3e4),i=!0,c("init-complete",{success:!0})}catch(e){p(`FFmpeg initialization failed: ${e.message}`)}}();break;case"compress":await async function({file:e,options:r}){if(!i)throw new Error("FFmpeg not initialized");o={id:"comp_"+Date.now()+"_"+Math.random().toString(36).substr(2,6),startTime:Date.now(),cancelled:!1};try{!function(e){const i=524288e3;if(e.size>i)throw new Error(`File too large: ${Math.round(e.size/1024/1024)}MB (max ${Math.round(500)}MB)`);if(!["video/mp4","video/mpeg","video/quicktime","video/x-msvideo"].includes(e.type))throw new Error(`Unsupported file type: ${e.type}`)}(e),m({stage:"initializing",progress:0});const i=t();m({stage:"loading",progress:10});const a=await i.compressVideo(e,r.preset||"medical-standard",(e=>{m({stage:"compressing",progress:20+.7*e.progress,time:e.time})}));if(o.cancelled)throw new Error("Compression cancelled");if(!a.success)throw new Error(a.error||"Compression failed");const p=new File([a.compressedFile],`compressed_${e.name.replace(/\.[^/.]+$/,".mp4")}`,{type:"video/mp4"}),d={originalSize:a.originalSize,compressedSize:a.compressedSize,compressionRatio:a.compressionRatio,processingTime:Date.now()-o.startTime,preset:a.preset,format:a.format},g=function(e,i,o){const r=(e-i)/e,t=s[o]?.medicalSettings,a={passed:!0,warnings:[],compressionRatio:r,qualityScore:l(o)};return t&&r>t.maxSizeReduction&&a.warnings.push({type:"excessive_compression",message:`Compression ratio ${(100*r).toFixed(1)}% exceeds medical safe threshold of ${(100*t.maxSizeReduction).toFixed(1)}%`}),t&&!t.diagnosticSafe&&"medical-high"!==o&&a.warnings.push({type:"diagnostic_quality",message:"Preset may not preserve diagnostic quality for medical analysis"}),a}(a.originalSize,a.compressedSize,a.preset);m({stage:"complete",progress:100}),c("complete",{compressedFile:p,stats:d,qualityValidation:g,medicalCompliance:{preset:r.preset,contentType:r.contentType,hipaaCompliant:!0,auditTrail:n(r)},compressionId:o.id})}catch(e){throw await a(),e}finally{o=null}}(r.data);break;case"cancel":o&&(o.cancelled=!0,a(),c("cancelled",{compressionId:o.id}));break;default:p(`Unknown message type: ${d}`)}}catch(e){p(`Worker error: ${e.message}`)}},importScripts("../ffmpeg-dynamic-loader.js");let r=null;function t(){return r||(r=new FFmpegDynamicLoader),r}async function a(i=[]){try{for(const o of i)await e.deleteFile(o)}catch(e){console.warn("Cleanup failed:",e)}}function n(e){return{compression_timestamp:(new Date).toISOString(),compression_preset:e.preset||"unknown",content_type:e.contentType||"documentation",hipaa_compliant:"true",compression_version:"2.0",quality_validated:"pending"}}function l(e){return{"medical-high":.95,"standard-medical":.8,"mobile-optimized":.65}[e]||.5}function c(e,i){self.postMessage({type:e,data:i})}function m(e){c("progress",e)}function p(e){c("error",{message:e})}self.onerror=function(e){p(`Worker error: ${e.message}`)},self.onunhandledrejection=function(e){p(`Unhandled promise rejection: ${e.reason}`)}}}]);