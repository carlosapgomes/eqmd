class WardPatientMap{constructor(){this.init()}init(){this.bindStaticEvents(),this.bindTreeEvents(),this.setupSearch(),this.setupFilters(),this.loadStateFromSession()}bindStaticEvents(){document.getElementById("expand-all")?.addEventListener("click",(()=>{this.expandAll()})),document.getElementById("collapse-all")?.addEventListener("click",(()=>{this.collapseAll()})),document.getElementById("refresh-data")?.addEventListener("click",(()=>{this.refreshData()}))}bindTreeEvents(){document.querySelectorAll(".ward-toggle").forEach((e=>{e.addEventListener("click",(e=>{this.toggleWard(e.target.closest(".ward-toggle"))}))})),document.querySelectorAll(".patient-item").forEach((e=>{e.addEventListener("click",(t=>{if(!t.target.closest(".btn")){const t=e.querySelector('a[href*="timeline"]');t&&(window.location.href=t.href)}}))}))}toggleWard(e){const t=e.dataset.ward,s=document.getElementById("ward-"+t),a=e.querySelector("i"),r=s.classList.contains("show");r?(s.style.height=s.scrollHeight+"px",s.offsetHeight,s.style.height="0px",s.classList.remove("show"),a.classList.remove("bi-chevron-down"),a.classList.add("bi-chevron-right"),e.setAttribute("aria-expanded","false")):(s.style.height="0px",s.classList.add("show"),s.style.height=s.scrollHeight+"px",a.classList.remove("bi-chevron-right"),a.classList.add("bi-chevron-down"),e.setAttribute("aria-expanded","true"),setTimeout((()=>{s.style.height="auto"}),300)),this.saveWardState(t,!r)}expandAll(){document.querySelectorAll(".ward-toggle").forEach((e=>{const t=e.dataset.ward;document.getElementById("ward-"+t).classList.contains("show")||this.toggleWard(e)}))}collapseAll(){document.querySelectorAll(".ward-toggle").forEach((e=>{const t=e.dataset.ward;document.getElementById("ward-"+t).classList.contains("show")&&this.toggleWard(e)}))}setupSearch(){const e=document.getElementById("patient-search");if(!e)return;let t;e.addEventListener("input",(e=>{clearTimeout(t),t=setTimeout((()=>{this.filterPatients(e.target.value.toLowerCase())}),300)}))}filterPatients(e){document.querySelectorAll(".ward-branch").forEach((t=>{const s=t.querySelectorAll(".patient-item");let a=!1;s.forEach((t=>{const s=t.querySelector(".fw-medium")?.textContent?.toLowerCase()||"",r=t.querySelector("strong")?.textContent?.toLowerCase()||"";""===e||s.includes(e)||r.includes(e)?(t.style.display="block",a=!0):t.style.display="none"}));const r=t.querySelector(".ward-header");if(""===e||a?(t.style.display="block",r.style.opacity="1"):t.style.display="none",""!==e&&a){const e=t.querySelector(".ward-toggle");t.querySelector(".ward-patients").classList.contains("show")||this.toggleWard(e)}})),this.updateSearchResults(e)}updateSearchResults(e){const t=document.getElementById("search-results");if(!t)return;if(""===e)return void(t.innerHTML="");const s=document.querySelectorAll('.patient-item[style*="block"], .patient-item:not([style*="none"])'),a=Array.from(s).filter((e=>"none"!==e.style.display)).length;t.innerHTML=`\n            <div class="alert alert-info">\n                <i class="bi bi-search me-2"></i>\n                Encontrados ${a} paciente(s) para "${e}"\n                ${0===a?"<br><small>Tente buscar por nome do paciente ou número do leito</small>":""}\n            </div>\n        `}setupFilters(){const e=document.getElementById("ward-filter");e?.addEventListener("change",(e=>{this.filterByWard(e.target.value)}))}filterByWard(e){document.querySelectorAll(".ward-branch").forEach((t=>{const s=t.querySelector(".ward-toggle")?.dataset.ward;""===e||s===e?t.classList.remove("filtered-out"):t.classList.add("filtered-out")}))}updateWardVisibility(){document.querySelectorAll(".ward-branch").forEach((e=>{e.querySelectorAll(".patient-item:not(.filtered-out)").length>0?e.classList.remove("no-visible-patients"):e.classList.add("no-visible-patients")}))}saveWardState(e,t){const s=JSON.parse(sessionStorage.getItem("wardStates")||"{}");s[e]=t,sessionStorage.setItem("wardStates",JSON.stringify(s))}loadStateFromSession(){const e=JSON.parse(sessionStorage.getItem("wardStates")||"{}");Object.keys(e).forEach((t=>{const s=document.querySelector(`[data-ward="${t}"]`),a=document.getElementById("ward-"+t),r=e[t],i=a?.classList.contains("show");s&&a&&r!==i&&this.toggleWard(s)}))}async refreshData(){const e=document.getElementById("refresh-data"),t=e?.innerHTML;try{e&&(e.disabled=!0,e.innerHTML='<i class="bi bi-arrow-clockwise me-1 spin"></i>Atualizando...');const s=await fetch(window.location.href,{headers:{"X-Requested-With":"XMLHttpRequest"}});if(!s.ok)throw new Error("Falha na atualização");{const a=await s.text(),r=(new DOMParser).parseFromString(a,"text/html").querySelector(".ward-tree");r&&(document.querySelector(".ward-tree").innerHTML=r.innerHTML,this.bindTreeEvents(),this.loadStateFromSession(),e&&(e.innerHTML='<i class="bi bi-check-circle me-1"></i>Atualizado!',setTimeout((()=>{e.innerHTML=t,e.disabled=!1}),1e3)))}}catch(s){console.error("Failed to refresh data:",s),e&&(e.innerHTML='<i class="bi bi-exclamation-circle me-1"></i>Erro',setTimeout((()=>{e.innerHTML=t,e.disabled=!1}),2e3))}}}document.addEventListener("DOMContentLoaded",(function(){new WardPatientMap}));