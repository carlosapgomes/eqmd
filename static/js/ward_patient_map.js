class WardPatientMap{constructor(){this.clearingFilters=!1,this.init()}init(){this.bindStaticEvents(),this.bindTreeEvents(),this.setupSearch(),this.setupFilters(),this.loadStateFromSession()}bindStaticEvents(){document.getElementById("expand-all")?.addEventListener("click",(()=>{this.expandAll()})),document.getElementById("collapse-all")?.addEventListener("click",(()=>{this.collapseAll()})),document.getElementById("refresh-data")?.addEventListener("click",(()=>{this.refreshData()}))}bindTreeEvents(){document.querySelectorAll(".ward-toggle").forEach((e=>{e.addEventListener("click",(e=>{this.toggleWard(e.target.closest(".ward-toggle"))}))})),document.querySelectorAll(".patient-item").forEach((e=>{e.addEventListener("click",(t=>{if(!t.target.closest(".btn")){const t=e.querySelector('a[href*="timeline"]');t&&(window.location.href=t.href)}}))}))}toggleWard(e){const t=e.dataset.ward,a=document.getElementById("ward-"+t),r=e.querySelector("i"),s=a.classList.contains("show");s?(a.style.height=a.scrollHeight+"px",a.offsetHeight,a.style.height="0px",a.classList.remove("show"),r.classList.remove("bi-chevron-down"),r.classList.add("bi-chevron-right"),e.setAttribute("aria-expanded","false")):(a.style.height="0px",a.classList.add("show"),a.style.height=a.scrollHeight+"px",r.classList.remove("bi-chevron-right"),r.classList.add("bi-chevron-down"),e.setAttribute("aria-expanded","true"),setTimeout((()=>{a.style.height="auto"}),300)),this.saveWardState(t,!s)}expandAll(){document.querySelectorAll(".ward-toggle").forEach((e=>{const t=e.dataset.ward;document.getElementById("ward-"+t).classList.contains("show")||this.toggleWard(e)}))}collapseAll(){document.querySelectorAll(".ward-toggle").forEach((e=>{const t=e.dataset.ward;document.getElementById("ward-"+t).classList.contains("show")&&this.toggleWard(e)}))}setupSearch(){const e=document.getElementById("patient-search");if(!e)return;let t;e.addEventListener("input",(e=>{clearTimeout(t),t=setTimeout((()=>{this.clearOtherFilters("search"),this.resetAllVisibility(),this.filterPatients(e.target.value.toLowerCase())}),300)}))}filterPatients(e){document.querySelectorAll(".ward-branch").forEach((t=>{const a=t.querySelectorAll(".patient-item");let r=!1;a.forEach((t=>{const a=t.querySelector(".fw-medium")?.textContent?.toLowerCase()||"",s=t.querySelector("strong")?.textContent?.toLowerCase()||"";""===e||a.includes(e)||s.includes(e)?(t.style.display="block",r=!0):t.style.display="none"}));const s=t.querySelector(".ward-header");if(""===e||r?(t.style.display="block",s.style.opacity="1"):t.style.display="none",""!==e&&r){const e=t.querySelector(".ward-toggle");t.querySelector(".ward-patients").classList.contains("show")||this.toggleWard(e)}})),this.updateSearchResults(e),this.updateFilterSummary()}updateSearchResults(e){const t=document.getElementById("search-results");if(!t)return;if(""===e)return void(t.innerHTML="");const a=document.querySelectorAll('.patient-item[style*="block"], .patient-item:not([style*="none"])'),r=Array.from(a).filter((e=>"none"!==e.style.display)).length;t.innerHTML=`\n            <div class="alert alert-info">\n                <i class="bi bi-search me-2"></i>\n                Encontrados ${r} paciente(s) para "${e}"\n                ${0===r?"<br><small>Tente buscar por nome do paciente ou número do leito</small>":""}\n            </div>\n        `}updateFilterSummary(){const e=document.getElementById("filter-summary");if(!e)return;const t=document.querySelectorAll('.patient-item:not([style*="none"])'),a=document.querySelectorAll(".patient-item").length,r=document.getElementById("ward-filter")?.value||"",s=document.getElementById("tag-filter")?.value||"",l=document.getElementById("patient-search")?.value||"";(r||s||l)&&t.length!==a?e.innerHTML=`\n                <div class="alert alert-light border">\n                    <small class="text-muted">\n                        <i class="bi bi-funnel me-2"></i>\n                        Mostrando ${t.length} de ${a} pacientes\n                    </small>\n                </div>\n            `:e.innerHTML=""}resetAllVisibility(){document.querySelectorAll(".patient-item").forEach((e=>{e.style.display="block"})),document.querySelectorAll(".ward-branch").forEach((e=>{e.style.display="block"}))}clearOtherFilters(e){if(!this.clearingFilters){if(this.clearingFilters=!0,"search"!==e){const e=document.getElementById("patient-search");e&&(e.value="")}if("ward"!==e){const e=document.getElementById("ward-filter");e&&(e.value="")}if("tag"!==e){const e=document.getElementById("tag-filter");e&&(e.value="")}this.clearingFilters=!1}}clearAllFilters(){if(this.clearingFilters)return;this.clearingFilters=!0;const e=document.getElementById("patient-search");e&&(e.value="");const t=document.getElementById("ward-filter");t&&(t.value="");const a=document.getElementById("tag-filter");a&&(a.value=""),this.resetAllVisibility(),this.updateFilterSummary();const r=document.getElementById("search-results");r&&(r.innerHTML=""),this.clearingFilters=!1}setupFilters(){const e=document.getElementById("ward-filter");e?.addEventListener("change",(e=>{this.clearOtherFilters("ward"),this.resetAllVisibility(),this.filterByWard(e.target.value)}));const t=document.getElementById("tag-filter");t?.addEventListener("change",(e=>{this.clearOtherFilters("tag"),this.resetAllVisibility(),this.filterByTag(e.target.value)})),t?.addEventListener("change",(e=>{const t=new URL(window.location);e.target.value?t.searchParams.set("tag",e.target.value):t.searchParams.delete("tag"),window.history.replaceState({},"",t)}))}filterByWard(e){document.querySelectorAll(".ward-branch").forEach((t=>{const a=t.querySelector(".ward-toggle")?.dataset.ward;t.style.display=""===e||a===e?"block":"none"})),this.updateFilterSummary()}filterByTag(e){document.querySelectorAll(".ward-branch").forEach((t=>{const a=t.querySelectorAll(".patient-item");let r=!1;a.forEach((t=>{if(""===e)return t.style.display="block",void(r=!0);(t.dataset.patientTags||"").split(",").filter((e=>e)).includes(e)?(t.style.display="block",r=!0):t.style.display="none"})),t.style.display=""===e||r?"block":"none"})),this.updateFilterSummary()}saveWardState(e,t){const a=JSON.parse(sessionStorage.getItem("wardStates")||"{}");a[e]=t,sessionStorage.setItem("wardStates",JSON.stringify(a))}loadStateFromSession(){const e=JSON.parse(sessionStorage.getItem("wardStates")||"{}");Object.keys(e).forEach((t=>{const a=document.querySelector(`[data-ward="${t}"]`),r=document.getElementById("ward-"+t),s=e[t],l=r?.classList.contains("show");a&&r&&s!==l&&this.toggleWard(a)}))}async refreshData(){const e=document.getElementById("refresh-data"),t=e?.innerHTML;try{this.clearAllFilters(),e&&(e.disabled=!0,e.innerHTML='<i class="bi bi-arrow-clockwise me-1 spin"></i>Atualizando...');const a=new URL(window.location.href);a.searchParams.delete("tag"),a.searchParams.delete("ward"),a.searchParams.delete("search");const r=await fetch(a.href,{headers:{"X-Requested-With":"XMLHttpRequest"}});if(!r.ok)throw new Error("Falha na atualização");{const a=await r.text(),s=(new DOMParser).parseFromString(a,"text/html").querySelector(".ward-tree");if(s){document.querySelector(".ward-tree").innerHTML=s.innerHTML,this.bindTreeEvents(),this.loadStateFromSession();const a=new URL(window.location.href);a.searchParams.delete("tag"),a.searchParams.delete("ward"),a.searchParams.delete("search"),window.history.replaceState({},"",a.href),e&&(e.innerHTML='<i class="bi bi-check-circle me-1"></i>Atualizado!',setTimeout((()=>{e.innerHTML=t,e.disabled=!1}),1e3))}}}catch(a){console.error("Failed to refresh data:",a),e&&(e.innerHTML='<i class="bi bi-exclamation-circle me-1"></i>Erro',setTimeout((()=>{e.innerHTML=t,e.disabled=!1}),2e3))}}}document.addEventListener("DOMContentLoaded",(function(){new WardPatientMap}));