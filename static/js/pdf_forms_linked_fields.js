!function(){"use strict";class e{constructor(e){this.linkedFieldsMap=e,this.init()}init(){if(this.linkedFieldsMap&&0!==Object.keys(this.linkedFieldsMap).length)for(const[e,t]of Object.entries(this.linkedFieldsMap))this.initializeDataSource(e,t)}initializeDataSource(e,t){const i=t.fields,n=t.data,a=Object.keys(i);if(0===a.length)return;const s=a[0],d=i[s],l=document.querySelector(`[name="${s}"]`);l&&(l.dataset.linkedData=JSON.stringify(n),l.dataset.linkedFields=JSON.stringify(i),l.addEventListener("change",(e=>{this.handleFieldChange(e.target,n,i,d)})),this.updateReadonlyStates(i,s),l.value&&this.handleFieldChange(l,n,i,d))}handleFieldChange(e,t,i,n){const a=e.value;if(!a)return void this.clearLinkedFields(i,e.name);const s=t.find((e=>e[n]===a));if(s)for(const[t,n]of Object.entries(i)){if(t===e.name)continue;const i=document.querySelector(`[name="${t}"]`);if(!i)continue;const a=s[n];null!=a&&(i.value=a,i.dispatchEvent(new Event("change",{bubbles:!0})),this.addVisualFeedback(i))}}clearLinkedFields(e,t){for(const i of Object.keys(e)){if(i===t)continue;const e=document.querySelector(`[name="${i}"]`);e&&"true"===e.dataset.linkedReadonly&&(e.value="",this.removeVisualFeedback(e))}}updateReadonlyStates(e,t){for(const i of Object.keys(e)){if(i===t)continue;const e=document.querySelector(`[name="${i}"]`);e&&"true"===e.dataset.linkedReadonly&&(e.setAttribute("readonly",!0),e.classList.add("form-control-plaintext","bg-light"))}}addVisualFeedback(e){e.classList.remove("is-invalid"),e.classList.add("auto-filled"),setTimeout((()=>{e.classList.remove("auto-filled")}),1e3)}removeVisualFeedback(e){e.classList.remove("auto-filled")}}document.addEventListener("DOMContentLoaded",(function(){const t=document.getElementById("linked-fields-data");if(t)try{const i=JSON.parse(t.textContent);new e(i)}catch(e){console.error("Failed to initialize linked fields:",e)}}))}();