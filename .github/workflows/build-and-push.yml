name: Build and Push Docker Image

on:
  push:
    branches: [master, main, dev]
  pull_request:
    branches: [master, main, dev]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Quick validation for dev branch
  validate:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Validate Python syntax
        run: python -m py_compile $(find . -name "*.py" | head -20)

  # Full pipeline for production branches only
  build-and-push:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            USER_ID=1001
            GROUP_ID=1001

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        if: github.event_name == 'push'
        with:
          languages: python

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3
        if: github.event_name == 'push'

      - name: Image vulnerability scan
        uses: anchore/scan-action@v3
        id: scan
        if: github.event_name == 'push'
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          fail-build: false
          severity-cutoff: high

      - name: Upload vulnerability scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always() && github.event_name == 'push' && steps.scan.outputs.sarif != ''
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload SARIF as workflow artifact
        uses: actions/upload-artifact@v4
        if: always() && github.event_name == 'push' && steps.scan.outputs.sarif != ''
        with:
          name: vulnerability-scan-results
          path: ${{ steps.scan.outputs.sarif }}
          retention-days: 30
