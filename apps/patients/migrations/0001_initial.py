# Generated by Django 5.2.1 on 2025-10-12 19:57

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_reason', models.TextField(blank=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('color', models.CharField(default='#007bff', help_text='Cor em formato hexadecimal (ex: #007bff)', max_length=7, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag Permitida',
                'verbose_name_plural': 'Tags Permitidas',
                'db_table': 'patients_allowedtag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAllowedTag',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_reason', models.TextField(blank=True)),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('color', models.CharField(default='#007bff', help_text='Cor em formato hexadecimal (ex: #007bff)', max_length=7, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tag Permitida',
                'verbose_name_plural': 'historical Tags Permitidas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_reason', models.TextField(blank=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('birthday', models.DateField(verbose_name='Data de Nascimento')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('N', 'Não Informado')], default='N', max_length=1, verbose_name='Sexo')),
                ('healthcard_number', models.CharField(blank=True, max_length=60, verbose_name='Número do Cartão de Saúde')),
                ('id_number', models.CharField(blank=True, max_length=30, verbose_name='Número de Identidade')),
                ('fiscal_number', models.CharField(blank=True, max_length=30, verbose_name='Número Fiscal')),
                ('phone', models.CharField(blank=True, max_length=100, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Província')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='Código Postal')),
                ('status', models.IntegerField(choices=[(1, 'Ambulatorial'), (2, 'Internado'), (3, 'Emergência'), (4, 'Alta'), (5, 'Transferido'), (6, 'Óbito')], default=1, verbose_name='Status')),
                ('bed', models.CharField(blank=True, max_length=20, verbose_name='Leito/Cama')),
                ('last_admission_date', models.DateField(blank=True, null=True, verbose_name='Data da Última Admissão')),
                ('last_discharge_date', models.DateField(blank=True, null=True, verbose_name='Data da Última Alta')),
                ('current_record_number', models.CharField(blank=True, help_text='Número atual do prontuário (denormalizado para performance)', max_length=50, verbose_name='Número do Prontuário Atual')),
                ('current_admission_id', models.UUIDField(blank=True, help_text='ID da internação ativa (denormalizado para performance)', null=True, verbose_name='ID da Internação Atual')),
                ('total_admissions_count', models.IntegerField(default=0, help_text='Número total de internações do paciente', verbose_name='Total de Internações')),
                ('total_inpatient_days', models.IntegerField(default=0, help_text='Total de dias internado ao longo de todas as internações', verbose_name='Total de Dias Internado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'patients_patient',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientRecordNumber',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_number', models.CharField(help_text='Número do prontuário do paciente no hospital', max_length=50, verbose_name='Número do Prontuário')),
                ('is_current', models.BooleanField(default=True, help_text='Indica se este é o número de prontuário atual', verbose_name='Atual')),
                ('previous_record_number', models.CharField(blank=True, help_text='Número de prontuário anterior (se houver)', max_length=50, verbose_name='Número Anterior')),
                ('change_reason', models.TextField(blank=True, help_text='Razão para a mudança do número do prontuário', verbose_name='Motivo da Alteração')),
                ('effective_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Data em que o número passou a ser válido', verbose_name='Data de Vigência')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_record_numbers', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_numbers', to='patients.patient', verbose_name='Paciente')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_record_numbers', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
            ],
            options={
                'verbose_name': 'Número de Prontuário',
                'verbose_name_plural': 'Números de Prontuário',
                'ordering': ['-effective_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_instances', to='patients.allowedtag', verbose_name='Tag Permitida')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_tags', to='patients.patient', verbose_name='Paciente')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nome completo da ala (ex: Unidade de Terapia Intensiva)', max_length=100, unique=True, verbose_name='Nome da Ala')),
                ('abbreviation', models.CharField(help_text='Sigla da ala (ex: UTI, CC, PS)', max_length=10, unique=True, verbose_name='Sigla')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada da ala e suas especialidades', verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se a ala está ativa e disponível para uso', verbose_name='Ativa')),
                ('floor', models.CharField(blank=True, help_text='Andar onde a ala está localizada (ex: 2º Andar, Térreo)', max_length=20, verbose_name='Andar')),
                ('capacity_estimate', models.PositiveIntegerField(blank=True, help_text='Estimativa de capacidade de leitos (informativo apenas)', null=True, verbose_name='Capacidade Estimada')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_wards', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_wards', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
            ],
            options={
                'verbose_name': 'Ala',
                'verbose_name_plural': 'Alas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PatientAdmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('admission_datetime', models.DateTimeField(help_text='Data e hora da admissão hospitalar', verbose_name='Data/Hora de Admissão')),
                ('admission_type', models.CharField(choices=[('emergency', 'Emergência'), ('scheduled', 'Programada'), ('transfer', 'Transferência'), ('readmission', 'Reinternação')], default='scheduled', max_length=20, verbose_name='Tipo de Admissão')),
                ('discharge_datetime', models.DateTimeField(blank=True, help_text='Data e hora da alta hospitalar', null=True, verbose_name='Data/Hora de Alta')),
                ('discharge_type', models.CharField(blank=True, choices=[('medical', 'Alta Médica'), ('administrative', 'Alta Administrativa'), ('transfer_out', 'Transferência'), ('evasion', 'Evasão'), ('death', 'Óbito'), ('request', 'A Pedido')], max_length=20, verbose_name='Tipo de Alta')),
                ('initial_bed', models.CharField(blank=True, help_text='Leito/quarto inicial da internação', max_length=20, verbose_name='Leito Inicial')),
                ('final_bed', models.CharField(blank=True, help_text='Último leito/quarto antes da alta', max_length=20, verbose_name='Leito Final')),
                ('admission_diagnosis', models.TextField(blank=True, help_text='Diagnóstico principal na admissão', verbose_name='Diagnóstico de Admissão')),
                ('discharge_diagnosis', models.TextField(blank=True, help_text='Diagnóstico principal na alta', verbose_name='Diagnóstico de Alta')),
                ('stay_duration_hours', models.IntegerField(blank=True, help_text='Duração total da internação em horas', null=True, verbose_name='Duração da Internação (horas)')),
                ('stay_duration_days', models.IntegerField(blank=True, help_text='Duração total da internação em dias', null=True, verbose_name='Duração da Internação (dias)')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se a internação está ativa (não teve alta)', verbose_name='Internação Ativa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_admissions', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='patients.patient', verbose_name='Paciente')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_admissions', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
                ('ward', models.ForeignKey(blank=True, help_text='Ala onde a internação ocorreu', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admissions', to='patients.ward', verbose_name='Ala')),
            ],
            options={
                'verbose_name': 'Internação',
                'verbose_name_plural': 'Internações',
                'ordering': ['-admission_datetime'],
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='ward',
            field=models.ForeignKey(blank=True, help_text='Ala onde o paciente está localizado', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='patients.ward', verbose_name='Ala'),
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_reason', models.TextField(blank=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('birthday', models.DateField(verbose_name='Data de Nascimento')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('N', 'Não Informado')], default='N', max_length=1, verbose_name='Sexo')),
                ('healthcard_number', models.CharField(blank=True, max_length=60, verbose_name='Número do Cartão de Saúde')),
                ('id_number', models.CharField(blank=True, max_length=30, verbose_name='Número de Identidade')),
                ('fiscal_number', models.CharField(blank=True, max_length=30, verbose_name='Número Fiscal')),
                ('phone', models.CharField(blank=True, max_length=100, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Estado/Província')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='Código Postal')),
                ('status', models.IntegerField(choices=[(1, 'Ambulatorial'), (2, 'Internado'), (3, 'Emergência'), (4, 'Alta'), (5, 'Transferido'), (6, 'Óbito')], default=1, verbose_name='Status')),
                ('bed', models.CharField(blank=True, max_length=20, verbose_name='Leito/Cama')),
                ('last_admission_date', models.DateField(blank=True, null=True, verbose_name='Data da Última Admissão')),
                ('last_discharge_date', models.DateField(blank=True, null=True, verbose_name='Data da Última Alta')),
                ('current_record_number', models.CharField(blank=True, help_text='Número atual do prontuário (denormalizado para performance)', max_length=50, verbose_name='Número do Prontuário Atual')),
                ('current_admission_id', models.UUIDField(blank=True, help_text='ID da internação ativa (denormalizado para performance)', null=True, verbose_name='ID da Internação Atual')),
                ('total_admissions_count', models.IntegerField(default=0, help_text='Número total de internações do paciente', verbose_name='Total de Internações')),
                ('total_inpatient_days', models.IntegerField(default=0, help_text='Total de dias internado ao longo de todas as internações', verbose_name='Total de Dias Internado')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ward', models.ForeignKey(blank=True, db_constraint=False, help_text='Ala onde o paciente está localizado', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='patients.ward', verbose_name='Ala')),
            ],
            options={
                'verbose_name': 'historical Paciente',
                'verbose_name_plural': 'historical Pacientes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name='allowedtag',
            index=models.Index(fields=['is_deleted', 'name'], name='patients_al_is_dele_aa2e71_idx'),
        ),
        migrations.AddIndex(
            model_name='patientrecordnumber',
            index=models.Index(fields=['patient', 'is_current'], name='patients_pa_patient_3e9076_idx'),
        ),
        migrations.AddIndex(
            model_name='patientrecordnumber',
            index=models.Index(fields=['record_number'], name='patients_pa_record__dee18d_idx'),
        ),
        migrations.AddIndex(
            model_name='patientrecordnumber',
            index=models.Index(fields=['effective_date'], name='patients_pa_effecti_470560_idx'),
        ),
        migrations.AddConstraint(
            model_name='patientrecordnumber',
            constraint=models.UniqueConstraint(condition=models.Q(('is_current', True)), fields=('patient',), name='unique_current_record_per_patient'),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('allowed_tag', 'patient'), name='unique_tag_per_patient_per_allowed_tag'),
        ),
        migrations.AddIndex(
            model_name='ward',
            index=models.Index(fields=['is_active', 'name'], name='patients_wa_is_acti_a8dc87_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['patient', 'is_active'], name='patients_pa_patient_fc9bb3_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['admission_datetime'], name='patients_pa_admissi_1f71b2_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['discharge_datetime'], name='patients_pa_dischar_94033d_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['admission_type'], name='patients_pa_admissi_6cb2fe_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['patient', 'admission_datetime'], name='patients_pa_patient_71b1bf_idx'),
        ),
        migrations.AddIndex(
            model_name='patientadmission',
            index=models.Index(fields=['ward', 'admission_datetime'], name='patients_pa_ward_id_97e571_idx'),
        ),
        migrations.AddConstraint(
            model_name='patientadmission',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('patient',), name='unique_active_admission_per_patient'),
        ),
        migrations.AddConstraint(
            model_name='patientadmission',
            constraint=models.CheckConstraint(condition=models.Q(('discharge_datetime__isnull', True), ('discharge_datetime__gte', models.F('admission_datetime')), _connector='OR'), name='discharge_after_admission'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['is_deleted', 'status'], name='patients_pa_is_dele_688d32_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['is_deleted', 'created_at'], name='patients_pa_is_dele_4fe3a4_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['status', 'ward'], name='patients_pa_status_c1872c_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['name'], name='patients_pa_name_8d04ea_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['current_record_number'], name='patients_pa_current_42513c_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['current_admission_id'], name='patients_pa_current_de4ba7_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_admission_date'], name='patients_pa_last_ad_310c23_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['last_discharge_date'], name='patients_pa_last_di_bcd9ac_idx'),
        ),
    ]
