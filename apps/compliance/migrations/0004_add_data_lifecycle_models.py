# Generated by Django 5.2.1 on 2025-08-14 10:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('compliance', '0003_add_privacy_transparency_models'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnonymizationPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_name', models.CharField(max_length=200)),
                ('data_category', models.CharField(max_length=50)),
                ('purpose', models.CharField(default='', help_text='Finalidade da anonimização', max_length=200)),
                ('anonymization_technique', models.CharField(choices=[('k_anonymity', 'K-Anonimato'), ('l_diversity', 'L-Diversidade'), ('t_closeness', 'T-Proximidade'), ('differential_privacy', 'Privacidade Diferencial'), ('data_masking', 'Mascaramento de Dados'), ('generalization', 'Generalização'), ('suppression', 'Supressão'), ('noise_addition', 'Adição de Ruído'), ('pseudonymization', 'Pseudonimização')], max_length=30)),
                ('k_value', models.IntegerField(blank=True, help_text='Valor K para k-anonimato', null=True)),
                ('l_value', models.IntegerField(blank=True, help_text='Valor L para l-diversidade', null=True)),
                ('acceptable_risk_level', models.CharField(choices=[('very_low', 'Muito Baixo (< 1%)'), ('low', 'Baixo (1-5%)'), ('medium', 'Médio (5-15%)'), ('high', 'Alto (15-30%)'), ('very_high', 'Muito Alto (> 30%)')], default='low', max_length=10)),
                ('risk_assessment_method', models.TextField(default='', help_text='Método de avaliação de risco de reidentificação')),
                ('fields_to_anonymize', models.TextField(default='[]', help_text='JSON list of fields to anonymize')),
                ('anonymization_rules', models.TextField(default='{}', help_text='JSON with specific anonymization rules')),
                ('validation_required', models.BooleanField(default=True)),
                ('validation_method', models.TextField(default='', help_text='Método de validação da eficácia da anonimização')),
                ('specialist_review_required', models.BooleanField(default=True)),
                ('legal_basis_for_retention', models.TextField(default='', help_text='Base legal para manter dados anonimizados')),
                ('anonymized_data_purpose', models.TextField(default='', help_text='Finalidade dos dados anonimizados')),
                ('anonymized_retention_period', models.IntegerField(default=1095, help_text='Período de retenção em dias')),
                ('re_identification_test_results', models.TextField(blank=True)),
                ('effectiveness_score', models.FloatField(blank=True, help_text='Score de eficácia 0-100', null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('specialist_reviewed_by', models.CharField(blank=True, max_length=200)),
                ('specialist_reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('next_review_date', models.DateField()),
                ('review_frequency_months', models.IntegerField(default=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_anonymization_policies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Política de Anonimização',
                'verbose_name_plural': 'Políticas de Anonimização',
                'ordering': ['data_category', 'policy_name'],
            },
        ),
        migrations.CreateModel(
            name='DataAnonymizationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymization_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('original_object_id', models.UUIDField()),
                ('anonymized_object_id', models.UUIDField(blank=True, null=True)),
                ('anonymization_method', models.CharField(choices=[('field_removal', 'Remoção de Campos'), ('field_masking', 'Mascaramento'), ('data_generalization', 'Generalização'), ('pseudonymization', 'Pseudonimização'), ('statistical_disclosure', 'Controle Estatístico')], max_length=30)),
                ('fields_anonymized', models.TextField()),
                ('anonymization_rules', models.TextField()),
                ('anonymization_quality_score', models.FloatField(blank=True, null=True)),
                ('re_identification_risk', models.CharField(choices=[('low', 'Baixo'), ('medium', 'Médio'), ('high', 'Alto')], default='low', max_length=10)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('anonymization_purpose', models.CharField(choices=[('research', 'Pesquisa'), ('statistics', 'Estatísticas'), ('quality_improvement', 'Melhoria da Qualidade'), ('retention_compliance', 'Conformidade de Retenção')], max_length=30)),
                ('anonymized_data_retention', models.IntegerField(help_text='Dias para manter dados anonimizados')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('executed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Anonimização',
                'verbose_name_plural': 'Logs de Anonimização',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='DataRetentionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('data_category', models.CharField(choices=[('patient_identification', 'Identificação do Paciente'), ('patient_medical_records', 'Registros Médicos'), ('patient_contact_info', 'Informações de Contato'), ('staff_professional_data', 'Dados Profissionais da Equipe'), ('audit_logs', 'Logs de Auditoria'), ('consent_records', 'Registros de Consentimento'), ('media_files', 'Arquivos de Mídia'), ('communication_logs', 'Logs de Comunicação'), ('emergency_contacts', 'Contatos de Emergência')], max_length=50)),
                ('retention_period_days', models.IntegerField(help_text='Período de retenção em dias')),
                ('retention_basis', models.CharField(choices=[('legal_obligation', 'Obrigação Legal'), ('medical_requirement', 'Exigência Médica'), ('consent_duration', 'Duração do Consentimento'), ('business_necessity', 'Necessidade Operacional'), ('statute_limitation', 'Prazo Prescricional')], max_length=30)),
                ('legal_reference', models.CharField(help_text='Referência legal (ex: CFM 1.821/2007)', max_length=200)),
                ('warning_period_days', models.IntegerField(default=180, help_text='Dias antes da exclusão para enviar aviso')),
                ('grace_period_days', models.IntegerField(default=30, help_text='Período de graça após vencimento')),
                ('auto_delete_enabled', models.BooleanField(default=False)),
                ('anonymize_instead_delete', models.BooleanField(default=False)),
                ('require_manual_approval', models.BooleanField(default=True)),
                ('legal_hold_exempt', models.BooleanField(default=False)),
                ('emergency_access_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Política de Retenção',
                'verbose_name_plural': 'Políticas de Retenção',
                'ordering': ['data_category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DataDeletionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletion_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('original_object_id', models.UUIDField()),
                ('original_object_representation', models.TextField()),
                ('deletion_type', models.CharField(choices=[('automatic', 'Automática'), ('manual', 'Manual'), ('patient_request', 'Solicitação do Paciente'), ('legal_requirement', 'Exigência Legal'), ('anonymization', 'Anonimização')], max_length=20)),
                ('deletion_reason', models.TextField()),
                ('retention_policy_applied', models.CharField(max_length=200)),
                ('authorization_date', models.DateTimeField()),
                ('executed_at', models.DateTimeField()),
                ('deletion_method', models.CharField(choices=[('soft_delete', 'Exclusão Suave'), ('hard_delete', 'Exclusão Completa'), ('anonymization', 'Anonimização'), ('archival', 'Arquivamento')], max_length=30)),
                ('verification_hash', models.CharField(blank=True, max_length=64)),
                ('deletion_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('related_records_affected', models.IntegerField(default=0)),
                ('cascading_deletions', models.TextField(blank=True)),
                ('legal_basis_for_deletion', models.CharField(max_length=200)),
                ('compliance_notes', models.TextField(blank=True)),
                ('recovery_possible', models.BooleanField(default=False)),
                ('recovery_deadline', models.DateTimeField(blank=True, null=True)),
                ('authorized_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authorized_deletions', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_deletions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Exclusão de Dados',
                'verbose_name_plural': 'Logs de Exclusão de Dados',
                'ordering': ['-executed_at'],
                'indexes': [models.Index(fields=['executed_at', 'deletion_type'], name='compliance__execute_1699c0_idx'), models.Index(fields=['content_type', 'deletion_type'], name='compliance__content_72c328_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataRetentionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField()),
                ('data_creation_date', models.DateTimeField()),
                ('last_activity_date', models.DateTimeField(auto_now=True)),
                ('retention_end_date', models.DateField()),
                ('warning_date', models.DateField()),
                ('deletion_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('warning_sent', 'Aviso Enviado'), ('grace_period', 'Período de Graça'), ('scheduled_deletion', 'Agendado para Exclusão'), ('legal_hold', 'Retenção Legal'), ('deleted', 'Excluído'), ('anonymized', 'Anonimizado')], default='active', max_length=20)),
                ('warning_sent_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_approved_at', models.DateTimeField(blank=True, null=True)),
                ('legal_hold_reason', models.TextField(blank=True)),
                ('legal_hold_applied_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('deletion_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_deletions', to=settings.AUTH_USER_MODEL)),
                ('legal_hold_applied_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_legal_holds', to=settings.AUTH_USER_MODEL)),
                ('retention_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance.dataretentionpolicy')),
            ],
            options={
                'verbose_name': 'Cronograma de Retenção',
                'verbose_name_plural': 'Cronogramas de Retenção',
                'ordering': ['retention_end_date'],
                'indexes': [models.Index(fields=['retention_end_date', 'status'], name='compliance__retenti_d98c4c_idx'), models.Index(fields=['warning_date', 'status'], name='compliance__warning_a80393_idx'), models.Index(fields=['content_type', 'object_id'], name='compliance__content_8995d8_idx')],
                'unique_together': {('content_type', 'object_id')},
            },
        ),
    ]
