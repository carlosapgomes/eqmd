# Generated by Django 5.2.1 on 2025-08-14 11:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('compliance', '0005_add_breach_response_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('audit_type', models.CharField(choices=[('routine', 'Auditoria Rotineira'), ('incident_triggered', 'Disparada por Incidente'), ('regulatory_required', 'Exigência Regulatória'), ('annual_review', 'Revisão Anual'), ('policy_update', 'Atualização de Política'), ('system_change', 'Mudança de Sistema'), ('training_assessment', 'Avaliação de Treinamento')], max_length=20)),
                ('scheduled_date', models.DateField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('audit_scope', models.TextField(help_text='JSON list of areas/systems audited')),
                ('focus_areas', models.TextField(help_text='JSON list of specific focus areas')),
                ('status', models.CharField(choices=[('planned', 'Planejada'), ('in_progress', 'Em Andamento'), ('completed', 'Concluída'), ('failed', 'Falhada'), ('cancelled', 'Cancelada')], default='planned', max_length=15)),
                ('compliance_score', models.FloatField(blank=True, help_text='0-100 score', null=True)),
                ('compliance_level', models.CharField(blank=True, choices=[('excellent', 'Excelente (90-100%)'), ('good', 'Bom (75-89%)'), ('satisfactory', 'Satisfatório (60-74%)'), ('needs_improvement', 'Necessita Melhoria (40-59%)'), ('poor', 'Ruim (0-39%)')], max_length=20)),
                ('findings_count', models.IntegerField(default=0)),
                ('critical_findings', models.IntegerField(default=0)),
                ('audit_report', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('corrective_actions_required', models.BooleanField(default=False)),
                ('next_audit_due', models.DateField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_deadline', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_audits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Auditoria de Conformidade',
                'verbose_name_plural': 'Auditorias de Conformidade',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('legal_basis', 'Base Legal'), ('data_subject_rights', 'Direitos dos Titulares'), ('privacy_policies', 'Políticas de Privacidade'), ('retention_management', 'Gestão de Retenção'), ('incident_response', 'Resposta a Incidentes'), ('staff_training', 'Treinamento da Equipe'), ('technical_security', 'Segurança Técnica'), ('organizational_measures', 'Medidas Organizacionais')], max_length=30)),
                ('check_id', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('legal_reference', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('compliant', 'Conforme'), ('non_compliant', 'Não Conforme'), ('partially_compliant', 'Parcialmente Conforme'), ('not_applicable', 'Não Aplicável'), ('pending_review', 'Pendente de Revisão')], default='pending_review', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=10)),
                ('evidence_required', models.TextField(blank=True)),
                ('evidence_provided', models.TextField(blank=True)),
                ('assessor_notes', models.TextField(blank=True)),
                ('non_compliance_details', models.TextField(blank=True)),
                ('recommended_action', models.TextField(blank=True)),
                ('remediation_deadline', models.DateField(blank=True, null=True)),
                ('assessed_at', models.DateTimeField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='compliance.complianceaudit')),
            ],
            options={
                'verbose_name': 'Item de Checklist',
                'verbose_name_plural': 'Itens de Checklist',
                'ordering': ['category', 'check_id'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('issue_type', models.CharField(choices=[('policy_violation', 'Violação de Política'), ('process_gap', 'Lacuna de Processo'), ('training_deficiency', 'Deficiência de Treinamento'), ('system_weakness', 'Fraqueza do Sistema'), ('documentation_missing', 'Documentação Ausente'), ('deadline_missed', 'Prazo Perdido'), ('external_finding', 'Achado Externo')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], max_length=10)),
                ('description', models.TextField()),
                ('discovered_at', models.DateTimeField()),
                ('discovery_method', models.CharField(max_length=100)),
                ('affected_areas', models.TextField(help_text='JSON list of affected areas')),
                ('potential_impact', models.TextField()),
                ('regulatory_risk', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Aberto'), ('in_progress', 'Em Progresso'), ('resolved', 'Resolvido'), ('closed', 'Fechado'), ('deferred', 'Adiado')], default='open', max_length=15)),
                ('target_resolution_date', models.DateField()),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_description', models.TextField(blank=True)),
                ('corrective_actions', models.TextField(blank=True)),
                ('preventive_measures', models.TextField(blank=True)),
                ('requires_follow_up', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL)),
                ('discovered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discovered_issues', to=settings.AUTH_USER_MODEL)),
                ('related_audit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance.complianceaudit')),
                ('related_incident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance.securityincident')),
            ],
            options={
                'verbose_name': 'Problema de Conformidade',
                'verbose_name_plural': 'Problemas de Conformidade',
                'ordering': ['-discovered_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('patient_requests_response_time', 'Tempo de Resposta - Solicitações de Pacientes'), ('data_retention_compliance', 'Conformidade de Retenção de Dados'), ('staff_training_completion', 'Conclusão de Treinamento'), ('incident_response_time', 'Tempo de Resposta a Incidentes'), ('privacy_policy_awareness', 'Conhecimento da Política de Privacidade'), ('data_subject_rights_fulfillment', 'Cumprimento de Direitos dos Titulares'), ('breach_notification_timeliness', 'Pontualidade de Notificação de Violação'), ('audit_compliance_score', 'Pontuação de Conformidade da Auditoria')], max_length=50)),
                ('measurement_date', models.DateField()),
                ('measurement_period', models.CharField(choices=[('daily', 'Diário'), ('weekly', 'Semanal'), ('monthly', 'Mensal'), ('quarterly', 'Trimestral'), ('annual', 'Anual')], default='monthly', max_length=20)),
                ('target_value', models.FloatField(help_text='Target/expected value')),
                ('actual_value', models.FloatField(help_text='Actual measured value')),
                ('unit', models.CharField(help_text="e.g., 'days', 'percentage', 'count'", max_length=20)),
                ('measurement_context', models.TextField(blank=True)),
                ('data_source', models.CharField(blank=True, max_length=100)),
                ('performance_status', models.CharField(blank=True, choices=[('above_target', 'Acima da Meta'), ('on_target', 'Na Meta'), ('below_target', 'Abaixo da Meta'), ('critical', 'Crítico')], max_length=20)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Métrica de Conformidade',
                'verbose_name_plural': 'Métricas de Conformidade',
                'ordering': ['-measurement_date', 'metric_type'],
            },
        ),
        migrations.CreateModel(
            name='StaffTrainingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_type', models.CharField(choices=[('lgpd_basics', 'LGPD - Conceitos Básicos'), ('patient_rights', 'Direitos dos Pacientes'), ('data_security', 'Segurança de Dados'), ('incident_response', 'Resposta a Incidentes'), ('privacy_by_design', 'Privacidade por Design'), ('data_retention', 'Retenção de Dados'), ('consent_management', 'Gestão de Consentimento'), ('breach_procedures', 'Procedimentos de Violação')], max_length=30)),
                ('training_title', models.CharField(max_length=200)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('enrolled', 'Inscrito'), ('in_progress', 'Em Progresso'), ('completed', 'Concluído'), ('failed', 'Reprovado'), ('expired', 'Expirado'), ('cancelled', 'Cancelado')], default='enrolled', max_length=15)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('assessment_score', models.FloatField(blank=True, null=True)),
                ('passing_score', models.FloatField(default=70.0)),
                ('modules_completed', models.TextField(default=list, help_text='JSON list of completed modules')),
                ('time_spent_minutes', models.IntegerField(default=0)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_number', models.CharField(blank=True, max_length=50)),
                ('next_training_due', models.DateField(blank=True, null=True)),
                ('training_provider', models.CharField(blank=True, max_length=100)),
                ('training_materials', models.TextField(blank=True, help_text='JSON list of materials')),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Treinamento',
                'verbose_name_plural': 'Registros de Treinamento',
                'ordering': ['-enrolled_at'],
            },
        ),
        migrations.AddIndex(
            model_name='complianceaudit',
            index=models.Index(fields=['audit_type', 'status'], name='compliance__audit_t_04e503_idx'),
        ),
        migrations.AddIndex(
            model_name='complianceaudit',
            index=models.Index(fields=['scheduled_date', 'completed_at'], name='compliance__schedul_a174d4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='compliancechecklist',
            unique_together={('audit', 'check_id')},
        ),
        migrations.AddIndex(
            model_name='complianceissue',
            index=models.Index(fields=['status', 'severity'], name='compliance__status_77313d_idx'),
        ),
        migrations.AddIndex(
            model_name='complianceissue',
            index=models.Index(fields=['target_resolution_date', 'status'], name='compliance__target__41f406_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='compliancemetric',
            unique_together={('metric_type', 'measurement_date', 'measurement_period')},
        ),
        migrations.AddIndex(
            model_name='stafftrainingrecord',
            index=models.Index(fields=['staff_member', 'training_type', 'status'], name='compliance__staff_m_b7f0d0_idx'),
        ),
        migrations.AddIndex(
            model_name='stafftrainingrecord',
            index=models.Index(fields=['expires_at', 'status'], name='compliance__expires_949363_idx'),
        ),
    ]
