# Generated by Django 5.2.1 on 2025-08-24 17:09

from django.db import migrations
import os


def update_site_domain(apps, schema_editor):
    """Update the default Django site with hospital configuration from environment variables."""
    Site = apps.get_model('sites', 'Site')
    
    # Get configuration from environment variables
    hospital_name = os.getenv('HOSPITAL_NAME', 'Medical Center')
    hospital_domain = os.getenv('SITE_DOMAIN', 'localhost:8000')
    
    try:
        # Update the default site (ID=1)
        site = Site.objects.get(id=1)
        site.domain = hospital_domain
        site.name = hospital_name
        site.save()
        print(f"Updated site: Domain={site.domain}, Name={site.name}")
    except Site.DoesNotExist:
        # Create the site if it doesn't exist (shouldn't happen in normal Django setup)
        Site.objects.create(id=1, domain=hospital_domain, name=hospital_name)
        print(f"Created site: Domain={hospital_domain}, Name={hospital_name}")


def reverse_site_domain(apps, schema_editor):
    """Reverse the site domain update (set back to example.com)."""
    Site = apps.get_model('sites', 'Site')
    
    try:
        site = Site.objects.get(id=1)
        site.domain = 'example.com'
        site.name = 'example.com'
        site.save()
    except Site.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),  # Ensure sites app migrations have run
    ]

    operations = [
        migrations.RunPython(update_site_domain, reverse_site_domain),
    ]
